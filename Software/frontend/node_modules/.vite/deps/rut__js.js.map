{
  "version": 3,
  "sources": ["../../rut.js/index.js"],
  "sourcesContent": ["function clean (rut) {\n  return typeof rut === 'string'\n    ? rut.replace(/^0+|[^0-9kK]+/g, '').toUpperCase()\n    : ''\n}\n\nfunction validate (rut) {\n  if (typeof rut !== 'string') {\n    return false\n  }\n\n  // if it starts with 0 we return false\n  // so a rut like 00000000-0 will not pass\n  if (/^0+/.test(rut)) {\n    return false\n  }\n\n  if (!/^0*(\\d{1,3}(\\.?\\d{3})*)-?([\\dkK])$/.test(rut)) {\n    return false\n  }\n\n  rut = clean(rut)\n\n  let t = parseInt(rut.slice(0, -1), 10)\n  let m = 0\n  let s = 1\n\n  while (t > 0) {\n    s = (s + (t % 10) * (9 - (m++ % 6))) % 11\n    t = Math.floor(t / 10)\n  }\n\n  const v = s > 0 ? '' + (s - 1) : 'K'\n  return v === rut.slice(-1)\n}\n\nfunction format (rut, options = {\n  dots: true\n}) {\n  rut = clean(rut)\n\n  let result\n  if (options.dots) {\n    result = rut.slice(-4, -1) + '-' + rut.substr(rut.length - 1)\n    for (let i = 4; i < rut.length; i += 3) {\n      result = rut.slice(-3 - i, -i) + '.' + result\n    }\n  } else {\n    result = rut.slice(0, -1) + '-' + rut.substr(rut.length - 1)\n  }\n\n  return result\n}\n\nfunction getCheckDigit (input) {\n  const rut = Array.from(clean(input), Number)\n\n  if (rut.length === 0 || rut.includes(NaN)) {\n    throw new Error(`\"${input}\" as RUT is invalid`)\n  }\n\n  const modulus = 11\n  const initialValue = 0\n  const sumResult = rut\n    .reverse()\n    .reduce(\n      (accumulator, currentValue, index) =>\n        accumulator + currentValue * ((index % 6) + 2),\n      initialValue\n    )\n\n  const checkDigit = modulus - (sumResult % modulus)\n\n  if (checkDigit === 10) {\n    return 'K'\n  } else if (checkDigit === 11) {\n    return '0'\n  } else {\n    return checkDigit.toString()\n  }\n}\n\nmodule.exports = { validate, clean, format, getCheckDigit }\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA,aAAS,MAAO,KAAK;AACnB,aAAO,OAAO,QAAQ,WAClB,IAAI,QAAQ,kBAAkB,EAAE,EAAE,YAAY,IAC9C;AAAA,IACN;AAEA,aAAS,SAAU,KAAK;AACtB,UAAI,OAAO,QAAQ,UAAU;AAC3B,eAAO;AAAA,MACT;AAIA,UAAI,MAAM,KAAK,GAAG,GAAG;AACnB,eAAO;AAAA,MACT;AAEA,UAAI,CAAC,qCAAqC,KAAK,GAAG,GAAG;AACnD,eAAO;AAAA,MACT;AAEA,YAAM,MAAM,GAAG;AAEf,UAAI,IAAI,SAAS,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE;AACrC,UAAI,IAAI;AACR,UAAI,IAAI;AAER,aAAO,IAAI,GAAG;AACZ,aAAK,IAAK,IAAI,MAAO,IAAK,MAAM,MAAO;AACvC,YAAI,KAAK,MAAM,IAAI,EAAE;AAAA,MACvB;AAEA,YAAM,IAAI,IAAI,IAAI,MAAM,IAAI,KAAK;AACjC,aAAO,MAAM,IAAI,MAAM,EAAE;AAAA,IAC3B;AAEA,aAAS,OAAQ,KAAK,UAAU;AAAA,MAC9B,MAAM;AAAA,IACR,GAAG;AACD,YAAM,MAAM,GAAG;AAEf,UAAI;AACJ,UAAI,QAAQ,MAAM;AAChB,iBAAS,IAAI,MAAM,IAAI,EAAE,IAAI,MAAM,IAAI,OAAO,IAAI,SAAS,CAAC;AAC5D,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK,GAAG;AACtC,mBAAS,IAAI,MAAM,KAAK,GAAG,CAAC,CAAC,IAAI,MAAM;AAAA,QACzC;AAAA,MACF,OAAO;AACL,iBAAS,IAAI,MAAM,GAAG,EAAE,IAAI,MAAM,IAAI,OAAO,IAAI,SAAS,CAAC;AAAA,MAC7D;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,cAAe,OAAO;AAC7B,YAAM,MAAM,MAAM,KAAK,MAAM,KAAK,GAAG,MAAM;AAE3C,UAAI,IAAI,WAAW,KAAK,IAAI,SAAS,GAAG,GAAG;AACzC,cAAM,IAAI,MAAM,IAAI,KAAK,qBAAqB;AAAA,MAChD;AAEA,YAAM,UAAU;AAChB,YAAM,eAAe;AACrB,YAAM,YAAY,IACf,QAAQ,EACR;AAAA,QACC,CAAC,aAAa,cAAc,UAC1B,cAAc,gBAAiB,QAAQ,IAAK;AAAA,QAC9C;AAAA,MACF;AAEF,YAAM,aAAa,UAAW,YAAY;AAE1C,UAAI,eAAe,IAAI;AACrB,eAAO;AAAA,MACT,WAAW,eAAe,IAAI;AAC5B,eAAO;AAAA,MACT,OAAO;AACL,eAAO,WAAW,SAAS;AAAA,MAC7B;AAAA,IACF;AAEA,WAAO,UAAU,EAAE,UAAU,OAAO,QAAQ,cAAc;AAAA;AAAA;",
  "names": []
}
